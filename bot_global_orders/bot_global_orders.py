from datetime import datetime
import schedule
import telebot
from pycbrf import ExchangeRates
import random
import time
#import config
import requests
from telebot import types
from bs4 import BeautifulSoup
import re
from flask import Flask
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
# from telegram import ReplyKeyboardMarkup
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import pandas as pd


import os, sys
activate_this = '/home/w0461585/python/bin/activate_this.py'
with open(activate_this) as f:
     exec(f.read(), {'__file__': activate_this})


bot = telebot.TeleBot('6890983450:AAFESskiGVms7kW_ykM0TNndQ0dsewnrhXM')




def button_switch():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    itembtn2 = telebot.types.KeyboardButton('üìà –ö—É—Ä—Å')
    item3 = telebot.types.KeyboardButton("üí¥ –†–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å")
    item5 = telebot.types.KeyboardButton("üì¶ –û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑")
    item6 = telebot.types.KeyboardButton("üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
    item7 = telebot.types.KeyboardButton("‚ÑπÔ∏è FAQ")
    markup.add(itembtn2,item5, item3, item6, item7)
    return markup


def parcer_cny():
    start_time = time.time()
    url = 'https://www.tinkoff.ru/invest/currencies/CNYRUB/'
    response = requests.get(url)
    if response.status_code == 200:
        html = response.text
        soup = BeautifulSoup(html, 'html.parser')
        try:
            price_cny = soup.find('span', class_="Money-module__money_p_VHJ").text
            price_cny = re.sub(r'[^\d.,]', '', price_cny)
            price_cny = round(float(price_cny.replace(',', '.')), 2)
            price_cny = round(price_cny + float(0.6 + 0.3), 3)
        except AttributeError:
             price_cny = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞!'
        print('CNY Tinkoff –±–∏—Ä–∂–∞ ', price_cny)
        end_time = time.time()
        execution_time = end_time - start_time
        print(f'–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è : {execution_time} —Å–µ–∫')   

        return price_cny





def category_orders():
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–û–¥–µ–∂–¥–∞", callback_data="button1"))
    markup.add(types.InlineKeyboardButton("–û–±—É–≤—å", callback_data="button2"))
    markup.add(types.InlineKeyboardButton("–ê–∫—Å—Å–µ—Å—É–∞—Ä—ã", callback_data="button3"))
    markup.add(types.InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="button4"))
    return markup

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "button1":
        new_message = '<b>–û—Ç–ø–∞—Ä–≤—å—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ ¬•</b>'
        possition = '<b>–û–¥–µ–∂–¥–∞</b>'
        # –°–æ–∑–¥–∞–π—Ç–µ –ø—É—Å—Ç—É—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        empty_keyboard = types.InlineKeyboardMarkup()
        bot.edit_message_text(text=possition, chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=empty_keyboard, parse_mode='html')
        video_file = open('/home/w0461585/domains/my.matrium.ru/tgbot/bot_global_orders/video.mp4', 'rb')
        bot.send_video(chat_id=call.message.chat.id, video=video_file, width=100, height=100)

        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        item13 = telebot.types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup.add(item13)
        button1 = bot.send_message(chat_id=call.message.chat.id, text=new_message, parse_mode='html', reply_markup=markup)

        bot.register_next_step_handler(button1, clothing_calculation)
        # if button1 == '–ù–∞–∑–∞–¥':



    elif call.data == "button2":
        bot.answer_callback_query(call.id, "–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 2")
    elif call.data == "button3":
        bot.answer_callback_query(call.id, "–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –ö–Ω–æ–ø–∫—É 3")
    elif call.data == "button4":
        bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=False)




@bot.message_handler(commands=['start'])
def start(message):
    chat_member = bot.get_chat_member('@GlobalOrders_chanal', message.chat.id)
    is_subscribed = chat_member.status in ['member', 'administrator', 'creator']
    if is_subscribed:
        markupes = button_switch()
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –ø–æ–∫—É–ø–∫–æ–π –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ? –ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É!".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markupes)
    else:
        markup = types.InlineKeyboardMarkup(row_width=2)
        item3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/GlobalOrders_chanal')

        markup.add(item3)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)

        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        itembtn2 = telebot.types.KeyboardButton('–ì–æ—Ç–æ–≤–æ!')
        markup.add(itembtn2)
        time.sleep(2)
        bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ì–æ—Ç–æ–≤–æ, –∫–∞–∫ –≤—Å–µ —Å–¥–µ–ª–∞–µ—Ç–µ".format(message.from_user, bot.get_me()),
            parse_mode='html', reply_markup=markup)






@bot.message_handler(content_types=['text'])
def message(message):
    if message.chat.type == 'private':
        if message.text == '–ì–æ—Ç–æ–≤–æ!':
            is_subscribed = bot.get_chat_member('@GlobalOrders_chanal', message.chat.id).status in ['member', 'administrator', 'creator']
            if is_subscribed is True:
                    markup = button_switch()
                    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–∏—Å—å –ø–æ–∫—É–ø–∫–æ–π –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ? –ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É!".format(message.from_user, bot.get_me()),
                        parse_mode='html', reply_markup=markup)


            else:
                markup = types.InlineKeyboardMarkup(row_width=2)
                item3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='https://t.me/GlobalOrders_chanal')
                markup.add(item3)
                # bot.send_message(message.chat.id, "–•–ï–†!".format(message.from_user, bot.get_me()),
                #     parse_mode='html', reply_markup=markup)


        is_subscribed = bot.get_chat_member('@GlobalOrders_chanal', message.chat.id).status in ['member', 'administrator', 'creator']
        if is_subscribed is True:
            if message.text == 'üí¥ –†–∞—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å':
                price = parcer_cny()
                print(round((price), 2), '–†–∞—Å—á–µ—Ç.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))

                markup = category_orders()
                # –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                bot.send_message(message.chat.id, '<b>üõçÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞: </b>', parse_mode='html' , reply_markup=markup)

            elif message.text == 'üìà –ö—É—Ä—Å':
                    
                    price = parcer_cny()

                    print(price, '–ö—É—Ä—Å.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))
                    bot.send_message(message.chat.id, f'–ö—É—Ä—Å —é–∞–Ω—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: {round((price), 2)}')

            elif message.text == 'üì¶ –û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑':
                    numbers_order = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä</b> –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞.', parse_mode='html')
                    print('–û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))
                    bot.register_next_step_handler(numbers_order, numbers_order_tracking)




            elif message.text == 'üìû –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å':
                    feedback = bot.send_message(message.chat.id, '–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–ø–∏—à–∏ –Ω–∞–º!')
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    back_button = types.KeyboardButton('–ù–∞–∑–∞–¥')
                    markup.add(back_button)
                    bot.send_message(chat_id=message.chat.id, text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥', –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è.", reply_markup=markup)
                    bot.register_next_step_handler(feedback, feedback_send)
                    print('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))



            elif message.text == '–ù–∞–∑–∞–¥':
                markup = button_switch()
                bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é...".format(message.from_user, bot.get_me()),
                    parse_mode='html', reply_markup=markup)

                print('–ù–∞–∑–∞–¥', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))


            elif message.text == '‚ÑπÔ∏è FAQ':
                text_html = '''
‚ùóÔ∏è<b>–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>‚ùóÔ∏è

- <b><a href="http://example.com">–í—Å—ë –æ –¥–æ—Å—Ç–∞–≤–∫–µ.</a></b>
- <b><a href="http://example.com">–í —á–µ–º —Ä–∞–∑–ª–∏—á–∏—è —Å–∏–Ω–∏–π –∏ —á–µ—Ä–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –Ω–∞ Poizon?</a></b>
- <b><a href="http://example.com">–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –º–Ω–µ –ø—Ä–∏—à—ë–ª –Ω–µ–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä?</a></b>

- ‚ú®<b><a href="https://t.me/+LQ8zOoZSnLpkMmFi">–û—Ç–∑—ã–≤—ã</a></b>‚ú®
            '''
                bot.send_message(chat_id=message.chat.id, text=text_html, parse_mode='html')

            elif message.text == '–ì–æ—Ç–æ–≤–æ!':
                print('fake_error', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))


            else:
                    bot.send_message(message.chat.id, '''–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢
–ù–∞–∂–º–∏—Ç–µ <b>/start</b>''', parse_mode='html')
        else:
            markup = types.InlineKeyboardMarkup(row_width=2)
            item3 = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url='t.me/GlobalOrders_chanal')

            markup.add(item3)
            bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞!".format(message.from_user, bot.get_me()),
                parse_mode='html', reply_markup=markup)

            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            itembtn2 = telebot.types.KeyboardButton('–ì–æ—Ç–æ–≤–æ!')
            markup.add(itembtn2)
            time.sleep(2)
            bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ì–æ—Ç–æ–≤–æ, –∫–∞–∫ –≤—Å–µ —Å–¥–µ–ª–∞–µ—Ç–µ".format(message.from_user, bot.get_me()),
                parse_mode='html', reply_markup=markup)




@bot.message_handler(commands=['return'])
def clothing_calculation(message):
    input_sum = message.text
    if input_sum == '–ù–∞–∑–∞–¥':
        markup_oll = button_switch()
        bot.send_message(message.chat.id, text='–í–æ–∑–≤—Ä–∞—â–∞—é...', reply_markup=markup_oll)
    else:
        if message.text.isdigit():
            input_sum = int(message.text)
            curce = parcer_cny()

            if input_sum  >= 100000000 or input_sum <= 10:
                print("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ")
                bot.send_message(message.chat.id, f'–ù–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!')
            else:
                if input_sum <= 3399:
                        m = round((input_sum *(curce)+1500))
                        bot.send_message(message.chat.id, f'''‚úàÔ∏è <b>–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏ {m} —Ä—É–±.</b>
- ({curce} * {input_sum}) + 500 + 1000
- (–ö—É—Ä—Å * —Ü–µ–Ω–∞ –≤ —é–∞–Ω—è—Ö) + –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ + –∫–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞                             
''', parse_mode='html')
                        markup = types.InlineKeyboardMarkup(row_width=2)
                        item3 = types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è", url='https://t.me/GlobalOrders_chanal')
                        markup.add(item3)
                        bot.send_message(message.chat.id, f'–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.', reply_markup=markup)

                        print(message.text)

                elif input_sum >= 3400:
                        m = (input_sum * (curce) + 500)
                        last_price = round((m + (m/100*7)))
                        bot.send_message(message.chat.id, f'''
‚úàÔ∏è <b>–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏ {last_price} —Ä—É–±.</b>
- ({curce} * {input_sum}) + 500 + 7%
- (–ö—É—Ä—Å * —Ü–µ–Ω–∞ –≤ —é–∞–Ω—è—Ö) + –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–æ —Å–∫–ª–∞–¥–∞ –≤ –ö–∏—Ç–∞–µ + –∫–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞                             
''', parse_mode='html')
                        markup = types.InlineKeyboardMarkup(row_width=2)
                        item3 = types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è", url='https://t.me/GlobalOrders_chanal')
                        markup.add(item3)
                        bot.send_message(message.chat.id, f'–î–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.', reply_markup=markup)

                        print(message.text)

        else:
            bot.reply_to(message, f'–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ!')


def feedback_send(message):
    if message.text == '–ù–∞–∑–∞–¥':
        markup = button_switch()
        bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é...".format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)
    else:
        feedback_sms = str(message.text)
        print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {feedback_sms}')
        user_id = message.from_user.id
        username = message.from_user.username # –ü–æ–ª—É—á–∞–µ–º id –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.send_message(message.chat.id, '''–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ! –û–∂–∏–¥–∞–π—Ç–µ, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –º–µ–Ω–µ–¥–∂–µ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è.''')
        chat_id = '-1002114420582'  # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.send_message(chat_id, f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{username} (ID: {user_id}): {feedback_sms}')  # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è





def numbers_order_tracking(message):
    start_time = time.time()
    txt = message.text
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    credentials = ServiceAccountCredentials.from_json_keyfile_name('/home/w0461585/domains/my.matrium.ru/tgbot/bot_global_orders/globalorders-a5541fea450a.json', scope)
    gc = gspread.authorize(credentials)

    # –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à—É —Ç–∞–±–ª–∏—Ü—É –ø–æ –∏–º–µ–Ω–∏
    spreadsheet = gc.open('Orders Global Orders')

    # –í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –∏–Ω–¥–µ–∫—Å—É
    worksheet = spreadsheet.get_worksheet(0)
    print(worksheet)

    # –ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ 1 —Å—Ç–æ–ª–±—Ü–∞
    column_values_1 = worksheet.col_values(1)
    column_values_2 = worksheet.col_values(2)
    print('–Ω–æ–º–µ—Ä–∞', column_values_1,
          '—Å—Ç–∞—Ç—É—Å—ã', column_values_2)


    if txt in column_values_1:
        index = column_values_1.index(txt) + 1  # –∏–Ω–¥–µ–∫—Å + 1 —Ä–∞–≤–µ–Ω –Ω–æ–º–µ—Ä—É —Å—Ç—Ä–æ–∫–∏
        status = worksheet.cell(index, 2).value  # 2 - –Ω–æ–º–µ—Ä —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è Tracking
        bot.send_message(message.chat.id, f'''{txt} : <b>{status}</b>''', parse_mode='html')
    else:
        bot.send_message(message.chat.id, f"–ó–∞–∫–∞–∑ {txt} –Ω–µ –Ω–∞–π–¥–µ–Ω. ")
    end_time = time.time()
    total_time = end_time - start_time 
    print(total_time)


# bot.polling(none_stop=True)
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–ø—Ä–æ—Å–∞ –∫–∞–∂–¥—ã–µ 900 —Å–µ–∫—É–Ω–¥
def run_polling():
    while True:
        schedule.run_pending()
        time.sleep(900)

schedule.every(900).seconds.do(start)

# –ó–∞–ø—É—Å–∫ –æ–ø—Ä–æ—Å–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
import threading
polling_thread = threading.Thread(target=run_polling)
polling_thread.daemon = True  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ daemon –≤ True, —á—Ç–æ–±—ã –ø–æ—Ç–æ–∫ —Ä–∞–±–æ—Ç–∞–ª –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
polling_thread.start()

# –û—Ç—Å—é–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è
bot.infinity_polling()









            # elif message.text == '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å':
            #     def is_user_in_file(user_id):
            #         with open('participants.txt', 'r') as file:
            #             global users
            #             users = file.readlines()
            #             global num_lines
            #             num_lines = len(users)

            #             for user in users:
            #                 if str(user_id) == user.strip():
            #                     return True
            #         return False
            #     user_id = message.chat.username
            #     if is_user_in_file(user_id):

            #         markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            #         item5 = telebot.types.KeyboardButton("–ù–∞–∑–∞–¥")
            #         markup.add(item5)

            #         bot.reply_to(message, f"–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ!", reply_markup=markup)

            #     else:

            #         with open('participants.txt', 'a') as file:
            #             file.write(str(user_id) + '\n')

            #         markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            #         item5 = telebot.types.KeyboardButton("–ù–∞–∑–∞–¥")
            #         markup.add(item5)
            #         bot.reply_to(message, f"–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!", reply_markup=markup)

            #         print('–†–æ–∑—ã–≥—Ä—ã—à.', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))


            # elif message.text == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤':
            #     with open('participants.txt', 'r') as file:
            #         users = file.readlines()
            #         members_len = len(users)
            #         bot.reply_to(message, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {members_len}")
            #         print('–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', '–ö–æ–º–∞–Ω–¥–∞ –æ—Ç: {0.first_name} {0.last_name}. id: {0.username} '.format(message.from_user, bot.get_me()))